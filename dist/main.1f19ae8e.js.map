{"version":3,"sources":["main.js"],"names":["pickImageToBlend","subpath","amt","image","Image","imgAmt","Math","floor","random","subPath","finalPath","src","selectImage","imgNum","generateRandomColor","r","g","b","bgCol","toString","imgArr","window","onload","canvas","document","getElementById","squareImageSize","layer1","layer2","layer3","layer4","layer5","layer6","layer7","setSource","l1","l2","l3","l4","l5","l6","l7","button1","buildRobot","addEventListener","e","console","log","ol1","ol2","ol3","ol4","ol5","ol6","ol7","ctx","getContext","width","height","alpha","fillRect","globalCompositeOperation","i","length","drawImage","link","setAttribute","toDataURL","replace"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["//main function to randomize images for avatar generation\r\nconst pickImageToBlend =(subpath, amt) => {\r\n  const image = new Image();\r\n  const imgAmt = Math.floor(Math.random() * amt) +1 ;  // number of heads\r\n  const subPath = subpath;\r\n  const finalPath = subPath + imgAmt + \".png\";\r\n  return image.src = finalPath;\r\n  }\r\n\r\n  const selectImage = (subpath, imgNum) =>{\r\n    const image = new Image();\r\n    const subPath = subpath;\r\n    const finalPath = subPath + imgNum + \".png\";\r\n    return image.src = finalPath;\r\n  }\r\n\r\n// generate random color background and other applications \r\nlet generateRandomColor = () => {\r\n  var r = Math.floor(Math.random() * (255-100+1) +100);\r\n  var g = Math.floor(Math.random() * (255-100+1) +100);\r\n  var b = Math.floor(Math.random() * (255-100+1) +100);\r\n  let bgCol = '#' + r.toString(16) + g.toString(16) + b.toString(16);\r\n  return bgCol;\r\n  }\r\n\r\n//array of images for the avatar to supply the canvas context to draw wrapped up for iterating\r\nconst imgArr = [];\r\n\r\nwindow.onload =  () => {\r\n    //create canvas\r\n    const canvas = document.getElementById(\"canvas\");\r\n    // SIZE OF INPUT SQUARE\r\n    let squareImageSize = 1600;\r\n    //NAME FIRST IMAGE \r\n    let layer1 = new Image();\r\n    //NAMES SECOND IMAGE\r\n    let layer2 = new Image();\r\n    let layer3 = new Image();\r\n    let layer4 = new Image();\r\n    let layer5 = new Image();\r\n    let layer6 = new Image();\r\n    let layer7 = new Image();\r\n\r\n\r\n    //assign random file to image output\r\n    //quotation is folder path to image collections ... head... body... etc.. etc..\r\n    let setSource = (l1,l2,l3,l4,l5,l6,l7) => {\r\n    layer1.src = selectImage(\"img/Layer1/Common/\", l1);\r\n    layer2.src = selectImage(\"img/Layer2/Common/\", l2);\r\n    layer3.src = selectImage(\"img/Layer3/Common/\", l3);\r\n    layer4.src = selectImage(\"img/Layer4/Common/\", l4);\r\n    layer5.src = selectImage(\"img/Layer5/Common/\", l5);\r\n    layer6.src = selectImage(\"img/Layer6/Common/\",l6);\r\n    layer7.src = selectImage(\"img/Layer7/Common/\", l7);\r\n    }\r\n\r\n    setSource(1,1,6,3,3,3,3);\r\n    // add more images to the array by loading them from files from folder\r\n    // let newImage = new Image();\r\n    // newImage.src = pickImageToBlend(\"img/folder/filename\", ammount of images);\r\n    //imgArr[i] = newImage;\r\n    \r\n    //assign images to the array\r\n    imgArr[0] = layer1;\r\n    imgArr[1] = layer2;\r\n    imgArr[2] = layer3;\r\n    imgArr[3] = layer4;\r\n    imgArr[4] = layer5;\r\n    imgArr[5] = layer6;\r\n    imgArr[6] = layer7;\r\n    // ... would be imgARR[2] = nameImg;\r\n    let button1 = document.getElementById(\"select1\");\r\n    //build robot when images load\r\n    layer1.onload= () => {\r\n        buildRobot();\r\n        button1.addEventListener(\"click\", (e) => {\r\n            console.log(e)\r\n            console.log(imgArr);\r\n        })\r\n}\r\n  // function to render the robot to screen\r\n  let buildRobot = (ol1, ol2, ol3, ol4, ol5, ol6, ol7) => {\r\n    const ctx = canvas.getContext(\"2d\");\r\n    canvas.width = canvas.height= squareImageSize;\r\n    \r\n    ctx.alpha = .5;\r\n    ctx.fillRect(0, 0, squareImageSize, squareImageSize);\r\n\r\n    // if(imgArr){\r\n    // imgArr[0].src = selectImage(`img/Layer1/Common/`, ol1);\r\n    // imgArr[1].src = selectImage(`img/Layer1/Common/`, ol2);\r\n    // imgArr[3].src = selectImage(`img/Layer3/Common/`, ol3);\r\n    // imgArr[4].src = selectImage(`img/Layer4/Common/`, ol4);\r\n    // imgArr[5].src = selectImage(`img/Layer5/Common/`, ol5);\r\n    // imgArr[6].src = selectImage(`img/Layer6/Common/`, ol6);\r\n    // imgArr[7].src = selectImage(`img/Layer7/Common/`, ol7);\r\n    // }\r\n\r\n    //draw first image of array\r\n    // ctx.globalCompositeOperation = \"source-atop\";\r\n   \r\n    // ctx.globalCompositeOperation = \"source-over\";\r\n    imgArr[0].src = selectImage(`img/Layer1/Common/`, 2);\r\n    ctx.globalCompositeOperation = \"source-atop\";\r\n    // imgArr[1].src = selectImage(`img/Layer2/Common/`,  1)\r\n    // ctx.globalCompositeOperation = \"source-over\";\r\n    // imgArr[2].src = selectImage(`img/Layer3/Common/`, ol3)\r\n    // ctx.globalCompositeOperation = \"source-atop\";\r\n    // imgArr[3].src = selectImage(`img/Layer4/Common/`, ol4)\r\n    // imgArr[4].src = selectImage(`img/Layer5/Common/`, ol5)\r\n    // imgArr[5].src = selectImage(`img/Layer6/Common/`, ol6)\r\n    // imgArr[6].src = selectImage(`img/Layer7/Common/`, ol7)\r\n   for(i = 0; i < imgArr.length; i++){\r\n    ctx.drawImage(imgArr[i], (squareImageSize-imgArr[i].width),0);\r\n    // console.log(imgArr[1]);\r\n     } \r\n\r\n\r\n    const link = document.getElementById('link');\r\n    link.setAttribute('download', `Avatar${Math.random()}.png`);\r\n    link.setAttribute('href', canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\"));\r\n\r\n    // const link2 = document.getElementById('link2');\r\n  }\r\n}\r\n\r\n\r\n\r\n//old logic to keep in mind\r\n   { \r\n    // link.click();\r\n\r\n  \r\n\r\n    //* old logic \r\n\r\n    //original code before function wrap\r\n    // let layer1Num = Math.floor(Math.random() * 5) +1 ;  // number of heads\r\n    // let layer1Name = \"img/colclouds/colcloud\" + layer1Num + \".png\";\r\n    //layer1.src = layer1Name;\r\n\r\n    // let layer2 = new Image();\r\n    // let cloudsNum = Math.floor(Math.random() * 5) +1 ;  // number of heads\r\n    // let cloudsName = \"img/clouds/cloud\" + cloudsNum + \".png\";\r\n    // layer2.src = cloudsName;\r\n\r\n    //to output png to page\r\n    // let output = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");  // here is the most important part because if you dont replace you will get a DOM 18 exception.\r\n    // window.location.href=output; // it will save locally\r\n    \r\n\r\n\r\n   }"]}